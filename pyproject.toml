[project]
name = ""
version = "0.1.0"
description = "Django - Ecommerce API (Demo Project)"
authors = [
    {name = "Vinicius Cadore", email = "vrcadore@gmail.com"},
]
dependencies = [
    "argon2-cffi>=21.3.0",
    "Collectfast==2.2.0",
    "crispy-bootstrap5>=0.7",
    "django-allauth>=0.52.0",
    "django-anymail[mailgun]==9.1",
    "django-cors-headers==3.14.0",
    "django-crispy-forms>=2.0",
    "django-environ>=0.10.0",
    "django-extensions>=3.2.1",
    "django-model-utils>=4.3.1",
    "django-storages[boto3]==1.13.2",
    "django>=4.1.7",
    "djangorestframework==3.14.0",
    "drf-spectacular==0.26.1",
    "gunicorn==20.1.0",
    "Pillow>=9.4.0",
    "python-slugify>=8.0.1",
    "pytz>=2022.7.1",
    "pyyaml>=6.0",
    "uvicorn[standard]==0.21.1",
    "django-treebeard>=4.6.1",
    "dj-rest-auth>=3.0.0",
    "djangorestframework-simplejwt>=5.2.2",
]
requires-python = ">=3.10"
readme = "README.md"
[project.optional-dependencies]

[tool]
[tool.pdm]
[tool.pdm.dev-dependencies]
base = ["psycopg2-binary>=2.9.5"]
testing = [
    "django-stubs>=1.16.0",
    "factory-boy>=3.2.1",
    "mypy>=1.1.1",
    "pytest-django>=4.5.2",
    "pytest-factoryboy>=2.5.1",
    "pytest-sugar>=0.9.6",
    "pytest>=7.2.2",
    "pytest-mock>=3.10.0",
    "pytest-cov>=4.0.0",
]
codequality = [
    "black>=23.1.0",
    "coverage>=7.2.1",
    "django-coverage-plugin>=3.0.0",
    "flake8-isort>=6.0.0",
    "pre-commit>=3.2.1",
    "pydocstyle>=6.3.0",
    "pylint-django>=2.5.3",
    "pyproject-flake8>=6.0.0.post1",
]
debugging = [
    "django-debug-toolbar>=3.8.1",
    "ipdb>=0.13.13",
    "Werkzeug[watchdog]>=2.2.3",
    "watchfiles==0.18.1",
]
documentation = [
    "sphinx>=6.1.3",
    "sphinx-autobuild>=2021.3.14",
    "myst-parser>=1.0.0",
    "sphinx-design>=0.4.1",
]

[tool.pdm.scripts]
_.env_file = ".env"
start = "python manage.py runserver"
makemig = "python manage.py makemigrations"
migrate = "python manage.py migrate"
test = "pytest"

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.1.0"
version_files = ["ecommerce/__init__.py", "pyproject.toml:version"]
style = [
    [ "qmark", "fg:#ff9d00 bold", ],
    [ "question", "bold", ],
    [ "answer", "fg:#ff9d00 bold", ],
    [ "pointer", "fg:#ff9d00 bold", ],
    [ "highlighted", "fg:#ff9d00 bold", ],
    [ "selected", "fg:#cc5454", ],
    [ "separator", "fg:#cc5454", ],
    [ "instruction", "", ],
    [ "text", "", ],
    [ "disabled", "fg:#858585 italic", ],
]

[tool.setuptools]
py-modules = []

[tool.pytest.ini_options]
addopts = [
    "-v",
    "--ds=config.settings.test",
    "--reuse-db",
    "--junitxml=junit/test-results.xml",
    "--cov",
    "--cov-report=xml",
    "--cov-report=html"
]
python_files = "tests.py test_*.py"
filterwarnings = [
    "ignore::DeprecationWarning",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "e2e: marks tests as end to end (deselect with '-m \"not e2e\"')",
]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203"]
max-complexity = 10

[tool.pycodestyle]
max-line-length = 120
exclude = [
    ".tox",
    ".git",
    "*/migrations/*",
    "*/static/CACHE/*",
    "docs",
    "node_modules",
    "venv",
    ".venv",
]

[tool.isort]
default_section = "THIRDPARTY"
force_grid_wrap = 0
include_trailing_comma = true
known_first_party = "ecommerce,config"
line_length = 88
multi_line_output = 3
skip = "venv/"
skip_glob = "**/migrations/*.py"
use_parentheses = true

[tool.mypy]
python_version = 3.10
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
plugins = ["mypy_django_plugin.main"]

[tool.django-stubs]
django_settings_module = "config.settings.test"

[tool.coverage.run]
include = ["ecommerce/**"]
omit = ["ecommerce/contrib/**", "*migrations*, *tests*"]
plugins = ["django_coverage_plugin"]

[tool.pylint.main]
load-plugins = "pylint_django"
django-settings-module = "config.settings.local"

[tool.pylint.format]
max-line-length = 120

[tool.pylint.design]
max-parents = 7

[tool.pylint.typecheck]
generated-members = "REQUEST,acl_users,aq_parent,\"[a-zA-Z]+_set{1,2}\",save,delete"

[tool.pylint."messages control"]
disable = ["missing-docstring", "invalid-name"]
